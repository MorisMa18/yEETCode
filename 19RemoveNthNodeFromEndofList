/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if (head == NULL)
            return NULL; 
        
        ListNode* node1 = head; 
        ListNode* node2 = head; 
        
        int counter = 0; 
        
        while (node1 -> next != NULL && counter != n){
            node1 = node1 -> next; 
            counter ++;
        }
        
        if (counter != n)
            return head -> next;
        
        
        while (node1 -> next != NULL){
            node1 = node1 -> next; 
            node2 = node2 -> next;
        }
        
        node2 -> next = node2 -> next -> next;
        
        return head;
    }
};